public static final BooleanProperty ("active", "active");
public static final BooleanProperty ("attached", "attached");
public static final BooleanProperty ("berries", "berries");
public static final BooleanProperty ("bloom", "bloom");
public static final BooleanProperty ("bottom", "bottom");
public static final BooleanProperty ("can_summon", "can_summon");
public static final BooleanProperty ("conditional", "conditional");
public static final BooleanProperty ("disarmed", "disarmed");
public static final BooleanProperty ("drag", "drag");
public static final BooleanProperty ("enabled", "enabled");
public static final BooleanProperty ("extended", "extended");
public static final BooleanProperty ("eye", "eye");
public static final BooleanProperty ("falling", "falling");
public static final BooleanProperty ("hanging", "hanging");
public static final BooleanProperty ("has_bottle_0", "has_bottle_0");
public static final BooleanProperty ("has_bottle_1", "has_bottle_1");
public static final BooleanProperty ("has_bottle_2", "has_bottle_2");
public static final BooleanProperty ("has_record", "has_record");
public static final BooleanProperty ("has_book", "has_book");
public static final BooleanProperty ("inverted", "inverted");
public static final BooleanProperty ("in_wall", "in_wall");
public static final BooleanProperty ("lit", "lit");
public static final BooleanProperty ("locked", "locked");
public static final BooleanProperty ("natural", "natural");
public static final BooleanProperty ("occupied", "occupied");
public static final BooleanProperty ("open", "open");
public static final BooleanProperty ("persistent", "persistent");
public static final BooleanProperty ("powered", "powered");
public static final BooleanProperty ("short", "short");
public static final BooleanProperty ("shrieking", "shrieking");
public static final BooleanProperty ("signal_fire", "signal_fire");
public static final BooleanProperty ("snowy", "snowy");
public static final BooleanProperty ("tip", "tip");
public static final BooleanProperty ("triggered", "triggered");
public static final BooleanProperty ("unstable", "unstable");
public static final BooleanProperty ("waterlogged", "waterlogged");
public static final EnumProperty ("horizontal_axis", "axis", Direction.Axis.class, (Enum[])(Direction.Axis.X, Direction.Axis.Z));
public static final EnumProperty ("axis", "axis", Direction.Axis.class);
public static final BooleanProperty ("up", "up");
public static final BooleanProperty ("down", "down");
public static final BooleanProperty ("north", "north");
public static final BooleanProperty ("east", "east");
public static final BooleanProperty ("south", "south");
public static final BooleanProperty ("west", "west");
public static final EnumProperty ("facing", "facing", Direction.class, (Enum[])(Direction.NORTH, Direction.EAST, Direction.SOUTH, Direction.WEST, Direction.UP, Direction.DOWN));
public static final EnumProperty ("facing_hopper", "facing", Direction.class, (direction) -> {
    return direction != Direction.UP;
});
public static final EnumProperty ("horizontal_facing", "facing", Direction.class, (Predicate) Direction.Plane.HORIZONTAL);
public static final IntegerProperty FLOWER_AMOUNT = IntegerProperty.create("flower_amount", 1, 4);
public static final EnumProperty ("orientation", "orientation", FrontAndTop.class);
public static final EnumProperty ("attach_face", "face", AttachFace.class);
public static final EnumProperty ("bell_attachment", "attachment", BellAttachType.class);
public static final EnumProperty ("east_wall", "east", WallSide.class);
public static final EnumProperty ("north_wall", "north", WallSide.class);
public static final EnumProperty ("south_wall", "south", WallSide.class);
public static final EnumProperty ("west_wall", "west", WallSide.class);
public static final EnumProperty ("east_redstone", "east", RedstoneSide.class);
public static final EnumProperty ("north_redstone", "north", RedstoneSide.class);
public static final EnumProperty ("south_redstone", "south", RedstoneSide.class);
public static final EnumProperty ("west_redstone", "west", RedstoneSide.class);
public static final EnumProperty ("double_block_half", "half", DoubleBlockHalf.class);
public static final EnumProperty ("half", "half", Half.class);
public static final EnumProperty ("rail_shape", "shape", RailShape.class);
public static final EnumProperty ("rail_shape_straight", "shape", RailShape.class, (railshape) -> {
    return railshape != RailShape.NORTH_EAST && railshape != RailShape.NORTH_WEST && railshape != RailShape.SOUTH_EAST && railshape != RailShape.SOUTH_WEST;
});
public static final int MAX_AGE_1 = 1;
public static final int MAX_AGE_2 = 2;
public static final int MAX_AGE_3 = 3;
public static final int MAX_AGE_4 = 4;
public static final int MAX_AGE_5 = 5;
public static final int MAX_AGE_7 = 7;
public static final int MAX_AGE_15 = 15;
public static final int MAX_AGE_25 = 25;
public static final IntegerProperty AGE_1 = IntegerProperty.create("age", 0, 1);
public static final IntegerProperty AGE_2 = IntegerProperty.create("age", 0, 2);
public static final IntegerProperty AGE_3 = IntegerProperty.create("age", 0, 3);
public static final IntegerProperty AGE_4 = IntegerProperty.create("age", 0, 4);
public static final IntegerProperty AGE_5 = IntegerProperty.create("age", 0, 5);
public static final IntegerProperty AGE_7 = IntegerProperty.create("age", 0, 7);
public static final IntegerProperty AGE_15 = IntegerProperty.create("age", 0, 15);
public static final IntegerProperty AGE_25 = IntegerProperty.create("age", 0, 25);
public static final IntegerProperty BITES = IntegerProperty.create("bites", 0, 6);
public static final IntegerProperty CANDLES = IntegerProperty.create("candles", 1, 4);
public static final IntegerProperty DELAY = IntegerProperty.create("delay", 1, 4);
public static final int MAX_DISTANCE = 7;
public static final IntegerProperty DISTANCE = IntegerProperty.create("distance", 1, 7);
public static final IntegerProperty EGGS = IntegerProperty.create("eggs", 1, 4);
public static final IntegerProperty HATCH = IntegerProperty.create("hatch", 0, 2);
public static final IntegerProperty LAYERS = IntegerProperty.create("layers", 1, 8);
public static final int MIN_LEVEL = 0;
public static final int MIN_LEVEL_CAULDRON = 1;
public static final int MAX_LEVEL_3 = 3;
public static final int MAX_LEVEL_8 = 8;
public static final IntegerProperty LEVEL_CAULDRON = IntegerProperty.create("level", 1, 3);
public static final IntegerProperty LEVEL_COMPOSTER = IntegerProperty.create("level", 0, 8);
public static final IntegerProperty LEVEL_FLOWING = IntegerProperty.create("level", 1, 8);
public static final IntegerProperty LEVEL_HONEY = IntegerProperty.create("honey_level", 0, 5);
public static final int MAX_LEVEL_15 = 15;
public static final IntegerProperty LEVEL = IntegerProperty.create("level", 0, 15);
public static final IntegerProperty MOISTURE = IntegerProperty.create("moisture", 0, 7);
public static final IntegerProperty NOTE = IntegerProperty.create("note", 0, 24);
public static final IntegerProperty PICKLES = IntegerProperty.create("pickles", 1, 4);
public static final IntegerProperty POWER = IntegerProperty.create("power", 0, 15);
public static final IntegerProperty STAGE = IntegerProperty.create("stage", 0, 1);
public static final int STABILITY_MAX_DISTANCE = 7;
public static final IntegerProperty STABILITY_DISTANCE = IntegerProperty.create("distance", 0, 7);
public static final int MIN_RESPAWN_ANCHOR_CHARGES = 0;
public static final int MAX_RESPAWN_ANCHOR_CHARGES = 4;
public static final IntegerProperty RESPAWN_ANCHOR_CHARGES = IntegerProperty.create("charges", 0, 4);
public static final IntegerProperty ROTATION_16 = IntegerProperty.create("rotation", 0, RotationSegment.getMaxSegmentIndex());
public static final EnumProperty ("bed_part", "part", BedPart.class);
public static final EnumProperty ("chest_type", "type", ChestType.class);
public static final EnumProperty ("mode_comparator", "mode", ComparatorMode.class);
public static final EnumProperty ("door_hinge", "hinge", DoorHingeSide.class);
public static final EnumProperty ("noteblock_instrument", "instrument", NoteBlockInstrument.class);
public static final EnumProperty ("piston_type", "type", PistonType.class);
public static final EnumProperty ("slab_type", "type", SlabType.class);
public static final EnumProperty ("stairs_shape", "shape", StairsShape.class);
public static final EnumProperty ("structureblock_mode", "mode", StructureMode.class);
public static final EnumProperty ("bamboo_leaves", "leaves", BambooLeaves.class);
public static final EnumProperty ("tilt", "tilt", Tilt.class);
public static final EnumProperty ("vertical_direction", "vertical_direction", Direction.class, (Enum[])(Direction.UP, Direction.DOWN));
public static final EnumProperty ("dripstone_thickness", "thickness", DripstoneThickness.class);
public static final EnumProperty ("sculk_sensor_phase", "sculk_sensor_phase", SculkSensorPhase.class);
public static final BooleanProperty ("chiseled_bookshelf_slot_0_occupied", "slot_0_occupied");
public static final BooleanProperty ("chiseled_bookshelf_slot_1_occupied", "slot_1_occupied");
public static final BooleanProperty ("chiseled_bookshelf_slot_2_occupied", "slot_2_occupied");
public static final BooleanProperty ("chiseled_bookshelf_slot_3_occupied", "slot_3_occupied");
public static final BooleanProperty ("chiseled_bookshelf_slot_4_occupied", "slot_4_occupied");
public static final BooleanProperty ("chiseled_bookshelf_slot_5_occupied", "slot_5_occupied");
public static final IntegerProperty DUSTED = IntegerProperty.create("dusted", 0, 3);
public static final BooleanProperty ("cracked", "cracked");
public static final BooleanProperty ("crafting", "crafting");
public static final EnumProperty ("trial_spawner_state", "trial_spawner_state", TrialSpawnerState.class);
public static final EnumProperty ("vault_state", "vault_state", VaultState.class);
public static final BooleanProperty ("ominous", "ominous");